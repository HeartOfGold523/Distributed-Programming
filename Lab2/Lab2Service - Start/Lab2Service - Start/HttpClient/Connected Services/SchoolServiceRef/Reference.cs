//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HttpClient.SchoolServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="PersonList", Namespace="http://schemas.datacontract.org/2004/07/Lab2Service", ItemName="Person")]
    [System.SerializableAttribute()]
    public class PersonList : System.Collections.Generic.List<Lab2Service.Person> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SchoolServiceRef.ISchoolService")]
    public interface ISchoolService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/AddStudent", ReplyAction="http://tempuri.org/ISchoolService/AddStudentResponse")]
        Lab2Service.Student AddStudent(string id, string lastName, string firstName, System.DateTime dob, Lab2Service.GenderEnum gender, string major, float units, float gpa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/AddStudent", ReplyAction="http://tempuri.org/ISchoolService/AddStudentResponse")]
        System.Threading.Tasks.Task<Lab2Service.Student> AddStudentAsync(string id, string lastName, string firstName, System.DateTime dob, Lab2Service.GenderEnum gender, string major, float units, float gpa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/DeleteStudent", ReplyAction="http://tempuri.org/ISchoolService/DeleteStudentResponse")]
        void DeleteStudent(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/DeleteStudent", ReplyAction="http://tempuri.org/ISchoolService/DeleteStudentResponse")]
        System.Threading.Tasks.Task DeleteStudentAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/GetStudent", ReplyAction="http://tempuri.org/ISchoolService/GetStudentResponse")]
        Lab2Service.Student GetStudent(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/GetStudent", ReplyAction="http://tempuri.org/ISchoolService/GetStudentResponse")]
        System.Threading.Tasks.Task<Lab2Service.Student> GetStudentAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/GetStudents", ReplyAction="http://tempuri.org/ISchoolService/GetStudentsResponse")]
        System.Collections.Generic.List<Lab2Service.Student> GetStudents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/GetStudents", ReplyAction="http://tempuri.org/ISchoolService/GetStudentsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Lab2Service.Student>> GetStudentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/UpdateStudent", ReplyAction="http://tempuri.org/ISchoolService/UpdateStudentResponse")]
        Lab2Service.Student UpdateStudent(string id, string lastName, string firstName, System.DateTime dob, Lab2Service.GenderEnum gender, string major, float units, float gpa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/UpdateStudent", ReplyAction="http://tempuri.org/ISchoolService/UpdateStudentResponse")]
        System.Threading.Tasks.Task<Lab2Service.Student> UpdateStudentAsync(string id, string lastName, string firstName, System.DateTime dob, Lab2Service.GenderEnum gender, string major, float units, float gpa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/AddTeacher", ReplyAction="http://tempuri.org/ISchoolService/AddTeacherResponse")]
        Lab2Service.Teacher AddTeacher(int id, string lastName, string firstName, System.DateTime dob, Lab2Service.GenderEnum gender, System.DateTime dateOfHire, int salary);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/AddTeacher", ReplyAction="http://tempuri.org/ISchoolService/AddTeacherResponse")]
        System.Threading.Tasks.Task<Lab2Service.Teacher> AddTeacherAsync(int id, string lastName, string firstName, System.DateTime dob, Lab2Service.GenderEnum gender, System.DateTime dateOfHire, int salary);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/DeleteTeacher", ReplyAction="http://tempuri.org/ISchoolService/DeleteTeacherResponse")]
        void DeleteTeacher(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/DeleteTeacher", ReplyAction="http://tempuri.org/ISchoolService/DeleteTeacherResponse")]
        System.Threading.Tasks.Task DeleteTeacherAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/GetTeacher", ReplyAction="http://tempuri.org/ISchoolService/GetTeacherResponse")]
        Lab2Service.Teacher GetTeacher(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/GetTeacher", ReplyAction="http://tempuri.org/ISchoolService/GetTeacherResponse")]
        System.Threading.Tasks.Task<Lab2Service.Teacher> GetTeacherAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/GetTeachers", ReplyAction="http://tempuri.org/ISchoolService/GetTeachersResponse")]
        System.Collections.Generic.List<Lab2Service.Teacher> GetTeachers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/GetTeachers", ReplyAction="http://tempuri.org/ISchoolService/GetTeachersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Lab2Service.Teacher>> GetTeachersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/GetPeople", ReplyAction="http://tempuri.org/ISchoolService/GetPeopleResponse")]
        HttpClient.SchoolServiceRef.PersonList GetPeople(string lastName, string firstName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISchoolService/GetPeople", ReplyAction="http://tempuri.org/ISchoolService/GetPeopleResponse")]
        System.Threading.Tasks.Task<HttpClient.SchoolServiceRef.PersonList> GetPeopleAsync(string lastName, string firstName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISchoolServiceChannel : HttpClient.SchoolServiceRef.ISchoolService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SchoolServiceClient : System.ServiceModel.ClientBase<HttpClient.SchoolServiceRef.ISchoolService>, HttpClient.SchoolServiceRef.ISchoolService {
        
        public SchoolServiceClient() {
        }
        
        public SchoolServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SchoolServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SchoolServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SchoolServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Lab2Service.Student AddStudent(string id, string lastName, string firstName, System.DateTime dob, Lab2Service.GenderEnum gender, string major, float units, float gpa) {
            return base.Channel.AddStudent(id, lastName, firstName, dob, gender, major, units, gpa);
        }
        
        public System.Threading.Tasks.Task<Lab2Service.Student> AddStudentAsync(string id, string lastName, string firstName, System.DateTime dob, Lab2Service.GenderEnum gender, string major, float units, float gpa) {
            return base.Channel.AddStudentAsync(id, lastName, firstName, dob, gender, major, units, gpa);
        }
        
        public void DeleteStudent(string id) {
            base.Channel.DeleteStudent(id);
        }
        
        public System.Threading.Tasks.Task DeleteStudentAsync(string id) {
            return base.Channel.DeleteStudentAsync(id);
        }
        
        public Lab2Service.Student GetStudent(string id) {
            return base.Channel.GetStudent(id);
        }
        
        public System.Threading.Tasks.Task<Lab2Service.Student> GetStudentAsync(string id) {
            return base.Channel.GetStudentAsync(id);
        }
        
        public System.Collections.Generic.List<Lab2Service.Student> GetStudents() {
            return base.Channel.GetStudents();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Lab2Service.Student>> GetStudentsAsync() {
            return base.Channel.GetStudentsAsync();
        }
        
        public Lab2Service.Student UpdateStudent(string id, string lastName, string firstName, System.DateTime dob, Lab2Service.GenderEnum gender, string major, float units, float gpa) {
            return base.Channel.UpdateStudent(id, lastName, firstName, dob, gender, major, units, gpa);
        }
        
        public System.Threading.Tasks.Task<Lab2Service.Student> UpdateStudentAsync(string id, string lastName, string firstName, System.DateTime dob, Lab2Service.GenderEnum gender, string major, float units, float gpa) {
            return base.Channel.UpdateStudentAsync(id, lastName, firstName, dob, gender, major, units, gpa);
        }
        
        public Lab2Service.Teacher AddTeacher(int id, string lastName, string firstName, System.DateTime dob, Lab2Service.GenderEnum gender, System.DateTime dateOfHire, int salary) {
            return base.Channel.AddTeacher(id, lastName, firstName, dob, gender, dateOfHire, salary);
        }
        
        public System.Threading.Tasks.Task<Lab2Service.Teacher> AddTeacherAsync(int id, string lastName, string firstName, System.DateTime dob, Lab2Service.GenderEnum gender, System.DateTime dateOfHire, int salary) {
            return base.Channel.AddTeacherAsync(id, lastName, firstName, dob, gender, dateOfHire, salary);
        }
        
        public void DeleteTeacher(int id) {
            base.Channel.DeleteTeacher(id);
        }
        
        public System.Threading.Tasks.Task DeleteTeacherAsync(int id) {
            return base.Channel.DeleteTeacherAsync(id);
        }
        
        public Lab2Service.Teacher GetTeacher(int id) {
            return base.Channel.GetTeacher(id);
        }
        
        public System.Threading.Tasks.Task<Lab2Service.Teacher> GetTeacherAsync(int id) {
            return base.Channel.GetTeacherAsync(id);
        }
        
        public System.Collections.Generic.List<Lab2Service.Teacher> GetTeachers() {
            return base.Channel.GetTeachers();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Lab2Service.Teacher>> GetTeachersAsync() {
            return base.Channel.GetTeachersAsync();
        }
        
        public HttpClient.SchoolServiceRef.PersonList GetPeople(string lastName, string firstName) {
            return base.Channel.GetPeople(lastName, firstName);
        }
        
        public System.Threading.Tasks.Task<HttpClient.SchoolServiceRef.PersonList> GetPeopleAsync(string lastName, string firstName) {
            return base.Channel.GetPeopleAsync(lastName, firstName);
        }
    }
}
